// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Empresa {
  id Int @id @default(autoincrement())
  nome String? @db.VarChar(100)
  ddd String? @db.VarChar(3)
  telefone String? @db.VarChar(16)
  cnpj String @db.VarChar(28)
  enderecoEmpresa EnderecoEmpresa? 
}

model Representante {
  id Int @id @default(autoincrement())
  nome String @db.VarChar(200) 
  naturalidade String @db.VarChar(30)
  estadoCivil String @db.VarChar(30)
  profissao String @db.VarChar(60)
  cpf String @db.VarChar(14) @unique
  registroGeral RegistroGeral?
  enderecoRepresentante EnderecoRepresentante?
}

model RegistroGeral {
  id Int @id @default(autoincrement())
  numero String @db.VarChar(14) @unique
  orgaoExpedidor String @db.VarChar(20)
  representante Representante @relation(fields: [representanteId], references: [id])
  representanteId Int @unique
}

model EnderecoEmpresa {
  id Int @id @default(autoincrement())
  tipo_logradouro String? @db.VarChar(20)
  logradouro String? @db.VarChar(40)
  numero String? @db.VarChar(10)
  complemento String? @db.VarChar(100)
  bairro String? @db.VarChar(20)
  cidade String? @db.VarChar(50)
  estado String? @db.VarChar(2)
  cep String? @db.VarChar(16)
  empresa Empresa @relation(fields: [empresaId], references: [id])
  empresaId Int @unique
}

model EnderecoRepresentante {
  id Int @id @default(autoincrement())
  enderecoCompleto String?
  cidade String? @db.VarChar(50)
  estado String? @db.VarChar(2)
  representante Representante @relation(fields: [representanteId], references: [id])
  representanteId Int @unique
}
